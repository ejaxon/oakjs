<OakCard id="Accordion" title="Accordion">
  <PageSidebar/>
  <Page>
    <PageTitle title="Accordion">
      An accordion allows users to toggle the display of sections of content
      <Todo>How to auto-add dropdown icon?</Todo>
    </PageTitle>

    <PageSection title="Content">

      <Grid columns={2}>
        <Column>
          <Example title="Inline Content">
            <Accordion>
              <Title appearance="active"><Icon icon="dropdown"/>What is a dog?</Title>
              <Content appearance="active">
                A dog is a type of domesticated animal. Known for its loyalty and faithfulness,
                it can be found as a welcome guest in many households across the world.
              </Content>

              <Title><Icon icon="dropdown"/>What kinds of dogs are there?</Title>
              <Content>
                There are many breeds of dogs. Each breed varies in size and temperament.
                Owners often select a breed of dog that they find to be compatible with their own
                lifestyle and desires from a companion.
              </Content>

              <Title><Icon icon="dropdown"/>How do you acquire a dog?</Title>
              <Content>
                <p>
                  Three common ways for a prospective owner to acquire a dog
                  is from pet shops, private owners, or shelters.
                </p>
                <p>
                  A pet shop may be the most convenient way to buy a dog.
                  Buying a dog from a private owner allows you to assess the pedigree
                  and upbringing of your dog before choosing to take it home. Lastly,
                  finding your dog from a shelter, helps give a good home to a dog who
                  may not find one so readily.
                </p>
              </Content>

            </Accordion>
          </Example>
        </Column>

        <Column>
          <Example title="Content from a Map">
            <Accordion items={data.dogStringMap}/>
          </Example>
        </Column>

        <Column>
          <Example title="Content from Array of Elements">
            <Accordion items={[
              data.whatIsADogTitle,
              data.whatIsADogContent,
              data.kindsOfDogsTitle,
              data.kindsOfDogsContent,
              data.acquiringADogTitle,
              data.acquiringADogContent,
            ]}/>
          </Example>
        </Column>

        <Column>
          <Example title="Content from Array of Strings">
            <Accordion items={data.dogStringArray}/>
          </Example>
        </Column>
      </Grid>

        <Example title="Nested">
          <Accordion id="nested" appearance="styled">
            <Title><Icon icon="dropdown"/>Level 1</Title>
            <Content>Welcome to level 1
              <Accordion>
                <Title><Icon icon="dropdown"/>Level 1A</Title>
                <Content>Level 1A contents</Content>
                <Title><Icon icon="dropdown"/>Level 1B</Title>
                <Content>Level 1B contents</Content>
              </Accordion>
            </Content>
            <Title><Icon icon="dropdown"/>Level 2</Title>
            <Content>
              Welcome to level 2
              <Title><Icon icon="dropdown"/>Level 2A</Title>
              <Content>Level 2A contents</Content>
              <Title><Icon icon="dropdown"/>Level 2B</Title>
              <Content>Level 2B contents</Content>
            </Content>
          </Accordion>
        </Example>
        <Bug>This is not working properly...  Do we have to further initialize the nested accordion?</Bug>
    </PageSection>

    <PageSection title="Settings">
      <Example title="Non-collapsible" hint="<Accordion collapsible={false}/>">
        <Accordion collapsible={false} appearance="styled" items={data.dogStringArray}/>
      </Example>

      <Example title="Non-exclusive" hint="<Accordion exlusive={false}/>">
        <Accordion exclusive={false} appearance="styled" items={data.dogStringArray}/>
      </Example>

      <Example title="Opening items at the start" hint="<Accordion open={0}/> or <Accordion exclusive={false} open={[0,1]}/>">
        <Label pointing="down" color="teal">open = 0</Label>
        <Accordion open={0} appearance="styled" items={data.dogStringArray}/>

        <Spacer/>
        <Label pointing="down" color="teal">open = [0, 1]</Label>
        <Accordion exclusive={false} open={[0,1]} appearance="styled" items={data.dogStringArray}/>
      </Example>

      <Example title="Show on hover" hint="<Accordion on='mouseenter'/>">
        <Accordion on="mouseenter" appearance="styled" items={data.dogStringArray}/>
      </Example>

      <Example title="Non-animated children" hint="<Accordion animateChildren={false}/>">
        <Accordion animateChildren={false} appearance="styled" items={data.dogStringArray}/>
        <Bug>This doesn't seem to work.  Are we doing it right?</Bug>
      </Example>
    </PageSection>

    <PageSection title="Appearance">
      <Example title="Styled" hint="<Accordion appearance='styled'/>">
        <Accordion appearance="styled" items={data.dogStringArray}/>
      </Example>

      <Example title="Fluid" hint="<Accordion appearance='fluid'/>">
        <Segment>
          <Accordion appearance="styled fluid" items={data.dogStringArray}/>
        </Segment>
      </Example>

      <Example title="Inverted (inside inverted segment)" hint="<Accordion appearance='inverted'/>">
        <Segment appearance="inverted">
          <Accordion appearance="inverted" items={data.dogStringArray}/>
        </Segment>

        <Spacer/>
        <Label pointing="down" color="teal">Inverted styled</Label>
        <Segment appearance="inverted compact unpadded">
          <Accordion appearance="inverted styled" items={data.dogStringArray}/>
        </Segment>
      </Example>
    </PageSection>

    <PageSection title="Events">
      <Example title="All events (logged to console)" hint="<Accordion onChange={...} etc/>">
        <Accordion appearance="styled" items={data.dogStringArray}
          onOpening={()=> console.log("opening")}
          onOpen={()=> console.log("open")}
          onClosing={()=> console.log("closing")}
          onClose={()=> console.log("close")}
          onChange={()=> console.log("changed")}
        />
      </Example>
    </PageSection>
  </Page>
</OakCard>
